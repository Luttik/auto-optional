{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"auto-optional \u00b6 auto-optional: adds the Optional type-hint to arguments where the default value is None Documentation : auto-optional.daanluttik.nl Source Code : github.com/luttik/auto-optional What does auto-optional do \u00b6 The basic purpose of auto-optional is ensuring that whenever a default argument is None the type annotation is Optional. For example: def foo ( bar : str = None ): ... Would turn into from typing import Optional def foo ( bar : Optional [ str ] = None ): ... Why would you want this \u00b6 Easily modify external libraries that didn't pay attention to proper use of optional to improve mypy linting. Force consistency in your own code-base: Enforcing that None parameter implies an Optional type. Explicit is better than implicit \u2014 pep 20 In the media: \u00b6 auto-optional was covered on PythonBytes #251 I love these little tools that you can run against your code that will just reformat them to be better. \u2014 Michael Kennedy Install \u00b6 Install with pip install auto-optional . Run \u00b6 After installing you can run auto-optional using auto-optional [paths...] (if no path is provided it'll process the current working directory). pre-commit \u00b6 You can run auto-optional via pre-commit . Add the following text to your repositories .pre-commit-config.yaml : repos : - repo : https://github.com/luttik/auto-optional rev : v0.2.0 # The version of auto-optional to use hooks : - id : auto-optional Things of note \u00b6 Things that are handled well \u00b6 The alternatives to Optional are supported, that means both; Union[X, None] x | None (allowed since python 3.10+). Existing imports are reused. import as and from typing import ... statements are properly handled. Things that need improvement \u00b6 For all these points you can leave a thumbs-up if you want it. Also, I welcome pull-requests for these issues. There is no exclude (for file patterns) option yet [#2] There is no ignore (for code lines) option yet [#3] Code is aways read and written as UTF-8 (which is accurate most of the time). [#4] There is no diff or check command yet for a dry-run or linting. [#5]","title":"auto-optional"},{"location":"#auto-optional","text":"auto-optional: adds the Optional type-hint to arguments where the default value is None Documentation : auto-optional.daanluttik.nl Source Code : github.com/luttik/auto-optional","title":"auto-optional"},{"location":"#what-does-auto-optional-do","text":"The basic purpose of auto-optional is ensuring that whenever a default argument is None the type annotation is Optional. For example: def foo ( bar : str = None ): ... Would turn into from typing import Optional def foo ( bar : Optional [ str ] = None ): ...","title":"What does auto-optional do"},{"location":"#why-would-you-want-this","text":"Easily modify external libraries that didn't pay attention to proper use of optional to improve mypy linting. Force consistency in your own code-base: Enforcing that None parameter implies an Optional type. Explicit is better than implicit \u2014 pep 20","title":"Why would you want this"},{"location":"#in-the-media","text":"auto-optional was covered on PythonBytes #251 I love these little tools that you can run against your code that will just reformat them to be better. \u2014 Michael Kennedy","title":"In the media:"},{"location":"#install","text":"Install with pip install auto-optional .","title":"Install"},{"location":"#run","text":"After installing you can run auto-optional using auto-optional [paths...] (if no path is provided it'll process the current working directory).","title":"Run"},{"location":"#pre-commit","text":"You can run auto-optional via pre-commit . Add the following text to your repositories .pre-commit-config.yaml : repos : - repo : https://github.com/luttik/auto-optional rev : v0.2.0 # The version of auto-optional to use hooks : - id : auto-optional","title":"pre-commit"},{"location":"#things-of-note","text":"","title":"Things of note"},{"location":"#things-that-are-handled-well","text":"The alternatives to Optional are supported, that means both; Union[X, None] x | None (allowed since python 3.10+). Existing imports are reused. import as and from typing import ... statements are properly handled.","title":"Things that are handled well"},{"location":"#things-that-need-improvement","text":"For all these points you can leave a thumbs-up if you want it. Also, I welcome pull-requests for these issues. There is no exclude (for file patterns) option yet [#2] There is no ignore (for code lines) option yet [#3] Code is aways read and written as UTF-8 (which is accurate most of the time). [#4] There is no diff or check command yet for a dry-run or linting. [#5]","title":"Things that need improvement"}]}