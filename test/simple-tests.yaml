tests:
  - name: test_simple_change
    before: |
      def bla(foo: str = None):
          ...
    after: |
      from typing import Optional
      def bla(foo: Optional[str] = None):
          ...

  - name: test_simple_change_already_imported
    before: |
      from typing import Optional
      def bla(foo:
        str = None):
          ...
    after: |
      from typing import Optional
      def bla(foo: Optional[str] = None):
          ...

  - name: test_simple_change_star_import
    before: |
      from typing import *
      def bla(foo:
        str = None):
          ...
    after: |
      from typing import *
      def bla(foo: Optional[str] = None):
          ...

  - name: test_simple_change_already_imported_optional_as
    before: |
      from typing import Optional as O
      def bla(foo: str = None):
          ...
    after: |
      from typing import Optional as O
      def bla(foo: O[str] = None):
          ...

  - name: test_nested_change
    before: |
      def bla(foo: Tuple[str] = None):
          ...
    after: |
      from typing import Optional
      def bla(foo: Optional[Tuple[str]] = None):
          ...

  - name: test_not_optional
    unchanged: |
      def bla(foo:
        str = 'a'):
          ...

  - name: test_already_optional
    unchanged: |
      from typing import Optional
      def bla(foo:
        Optional[str] = None):
          ...

  - name: test_legal_no_type
    unchanged: |
      class Bloep:
          def bla(self):
              ...

  - name: test_nochange_typing_import
    unchanged: |
      from typing import Optional
      def bla(foo:
        Optional[str] = None):
          ...

  - name: test_nochange_renamed_typing
    unchanged: |
      import typing
      import typing as t
      def bla(foo: t.Optional[str] = None):
          ...

  - name: test_prioritise_from_import
    before: |
      import typing
      from typing import Optional
      def bla(foo: str = None):
          ...
    after: |
      import typing
      from typing import Optional
      def bla(foo: Optional[str] = None):
          ...

  - name: test_nochange_typing_as_import
    unchanged: |
      import typing as t
      def bla(foo: t.Optional[str] = None):
          ...

  - name: test_accept_union_none
    unchanged: |
      import typing as t
      def bla(foo: t.Union[str] = None):
          ...
